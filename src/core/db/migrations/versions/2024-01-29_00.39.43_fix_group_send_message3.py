"""fix_group_send_message3

Revision ID: 23560af2d93a
Revises: 26d99cc7348e
Create Date: 2024-01-29 00:39:43.415528

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "23560af2d93a"
down_revision = "26d99cc7348e"
branch_labels = None
depends_on = None


def upgrade() -> None:
    op.drop_constraint("admin_token_requests_email_key", "admin_token_requests", type_="unique")
    op.add_column("external_site_users", sa.Column("external_id", sa.String(length=256), nullable=True))
    op.add_column("external_site_users", sa.Column("external_id_hash", sa.String(length=256), nullable=True))
    op.create_index(op.f("ix_external_site_users_external_id"), "external_site_users", ["external_id"], unique=True)
    op.create_index(
        op.f("ix_external_site_users_external_id_hash"), "external_site_users", ["external_id_hash"], unique=True
    )
    op.create_unique_constraint(None, "external_site_users", ["email"])
    op.drop_column("external_site_users", "id_hash")
    op.alter_column("unsubscribe_reason", "user_id", existing_type=sa.INTEGER(), nullable=False)
    op.alter_column("users_categories", "user_id", existing_type=sa.INTEGER(), nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("users_categories", "user_id", existing_type=sa.INTEGER(), nullable=True)
    op.alter_column("unsubscribe_reason", "user_id", existing_type=sa.INTEGER(), nullable=True)
    op.add_column(
        "external_site_users", sa.Column("id_hash", sa.VARCHAR(length=256), autoincrement=False, nullable=False)
    )
    op.drop_constraint(None, "external_site_users", type_="unique")
    op.drop_index(op.f("ix_external_site_users_external_id_hash"), table_name="external_site_users")
    op.drop_index(op.f("ix_external_site_users_external_id"), table_name="external_site_users")
    op.drop_column("external_site_users", "external_id_hash")
    op.drop_column("external_site_users", "external_id")
    op.create_unique_constraint("admin_token_requests_email_key", "admin_token_requests", ["email"])
    # ### end Alembic commands ###
