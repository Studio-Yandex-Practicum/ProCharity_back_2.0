import json
import urllib

from telegram import (
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    KeyboardButton,
    ReplyKeyboardMarkup,
    ReplyKeyboardRemove,
    Update,
    WebAppInfo,
)
from telegram.constants import ParseMode
from telegram.ext import CallbackContext, ContextTypes

from src.bot.constants import callback_data, commands
from src.bot.keyboards import MENU_KEYBOARD, get_categories_keyboard, get_subcategories_keyboard
from src.core.services.user import UserService
from src.settings import settings


async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_service = UserService()
    await user_service.register_user(
        telegram_id=update.effective_chat.id,
        username=update.effective_chat.username,
    )
    keyboard = InlineKeyboardMarkup(
        [
            [
                InlineKeyboardButton(
                    text="–ù–∞—á–Ω—ë–º",
                    callback_data=commands.GREETING,
                )
            ]
        ]
    )

    await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="–ü—Ä–∏–≤–µ—Ç! üëã \n\n"
        '–Ø –±–æ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –≤–æ–ª–æ–Ω—Ç–µ—Ä—Å—Ç–≤–∞ <a href="https://procharity.ru/">ProCharity</a>. '
        "–ë—É–¥—É –¥–µ—Ä–∂–∞—Ç—å —Ç–µ–±—è –≤ –∫—É—Ä—Å–µ –Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á –∏ –ø–æ–º–æ–≥—É "
        "–æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∫–æ–º–∞–Ω–¥–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏.",
        reply_markup=keyboard,
        parse_mode=ParseMode.HTML,
        disable_web_page_preview=True,
    )


async def menu_callback(update: Update):
    """Create button menu."""
    keyboard = MENU_KEYBOARD
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text("–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:", reply_markup=reply_markup)


async def categories_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["parent_id"] = None
    await update.message.reply_text(
        "–ß—Ç–æ–±—ã —è –∑–Ω–∞–ª, —Å –∫–∞–∫–∏–º–∏ –∑–∞–¥–∞—á–∞–º–∏ —Ç—ã –≥–æ—Ç–æ–≤ –ø–æ–º–æ–≥–∞—Ç—å, "
        "–≤—ã–±–µ—Ä–∏ —Å–≤–æ–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏ (–º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å "
        '–Ω–µ—Å–∫–æ–ª—å–∫–æ). –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ, –Ω–∞–∂–º–∏ –Ω–∞ –ø—É–Ω–∫—Ç "–ì–æ—Ç–æ–≤–æ üëå"',
        reply_markup=await get_categories_keyboard(),
    )


async def ask_your_question(update: Update, context: CallbackContext):
    name = update.effective_chat["first_name"]
    surname = update.effective_chat["last_name"]
    text = "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"
    params = {"name": name, "surname": surname}
    if update.effective_message.web_app_data:
        text = "–ò—Å–ø—Ä–∞–≤–∏—Ç—å –Ω–µ–≤–µ—Ä–Ω–æ –≤–Ω–µ—Å–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"
    await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å.",
        reply_markup=ReplyKeyboardMarkup.from_button(
            KeyboardButton(
                text=text,
                web_app=WebAppInfo(url=f"{settings.feedback_form_template_url}?{urllib.parse.urlencode(params)}"),
            )
        ),
    )


async def web_app_data(update: Update):
    user_data = json.loads(update.effective_message.web_app_data.data)
    buttons = [
        [InlineKeyboardButton(text="–û—Ç–∫—Ä—ã—Ç—å –≤ –º–µ–Ω—é", callback_data=callback_data.MENU)],
        [InlineKeyboardButton(text="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∫—Ä—ã—Ç—ã–µ –∑–∞–¥–∞–Ω–∏—è", callback_data=callback_data.VIEW_TASKS)],
    ]
    keyboard = InlineKeyboardMarkup(buttons)
    await update.message.reply_text(
        text=f"–°–ø–∞—Å–∏–±–æ, —è –ø–µ—Ä–µ–¥–∞–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∫–æ–º–∞–Ω–¥–µ ProCharity! –û—Ç–≤–µ—Ç –ø—Ä–∏–¥–µ—Ç –Ω–∞ –ø–æ—á—Ç—É {user_data['email']}",
        reply_markup=ReplyKeyboardRemove(),
    )
    await update.message.reply_text(
        text="–í—ã –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∫—Ä—ã—Ç—ã–µ –∑–∞–¥–∞–Ω–∏—è. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É.",
        reply_markup=keyboard,
    )


async def subcategories_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    parent_id = int(context.match.group(1))
    context.user_data["parent_id"] = parent_id

    await query.message.edit_text(
        "–ß—Ç–æ–±—ã —è –∑–Ω–∞–ª, —Å –∫–∞–∫–∏–º–∏ –∑–∞–¥–∞—á–∞–º–∏ —Ç—ã –≥–æ—Ç–æ–≤ –ø–æ–º–æ–≥–∞—Ç—å, "
        "–≤—ã–±–µ—Ä–∏ —Å–≤–æ–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏ (–º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å "
        '–Ω–µ—Å–∫–æ–ª—å–∫–æ). –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ, –Ω–∞–∂–º–∏ –Ω–∞ –ø—É–Ω–∫—Ç "–ì–æ—Ç–æ–≤–æ üëå"',
        reply_markup=await get_subcategories_keyboard(parent_id, context),
    )


async def select_subcategory_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    subcategory_id = int(context.match.group(1))
    selected_categories = context.user_data.setdefault("selected_categories", {})

    if subcategory_id not in selected_categories:
        selected_categories[subcategory_id] = None
    else:
        del selected_categories[subcategory_id]

    parent_id = context.user_data["parent_id"]

    await query.message.edit_text(
        "–ß—Ç–æ–±—ã —è –∑–Ω–∞–ª, —Å –∫–∞–∫–∏–º–∏ –∑–∞–¥–∞—á–∞–º–∏ —Ç—ã –≥–æ—Ç–æ–≤ –ø–æ–º–æ–≥–∞—Ç—å, "
        "–≤—ã–±–µ—Ä–∏ —Å–≤–æ–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏ (–º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å "
        '–Ω–µ—Å–∫–æ–ª—å–∫–æ). –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ, –Ω–∞–∂–º–∏ –Ω–∞ –ø—É–Ω–∫—Ç "–ì–æ—Ç–æ–≤–æ üëå"',
        reply_markup=await get_subcategories_keyboard(parent_id, context),
    )


async def back_subcategory_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query

    await query.message.edit_text(
        "–ß—Ç–æ–±—ã —è –∑–Ω–∞–ª, —Å –∫–∞–∫–∏–º–∏ –∑–∞–¥–∞—á–∞–º–∏ —Ç—ã –≥–æ—Ç–æ–≤ –ø–æ–º–æ–≥–∞—Ç—å, "
        "–≤—ã–±–µ—Ä–∏ —Å–≤–æ–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏ (–º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å "
        '–Ω–µ—Å–∫–æ–ª—å–∫–æ). –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ, –Ω–∞–∂–º–∏ –Ω–∞ –ø—É–Ω–∫—Ç "–ì–æ—Ç–æ–≤–æ üëå"',
        reply_markup=await get_categories_keyboard(),
    )
