version: "3.8"

volumes:
  postgres_data:

services:
  backend:
    build:
      context: ../../ProCharity_back_2.0
      dockerfile: Dockerfile
    container_name: dev_procharity_bot_backend
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    env_file:
      - ../.env
 
  postgres:
    image: postgres:13.2
    container_name: procharity_postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ../.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:1.23.3-alpine
    container_name: procharity_nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.local.conf:/etc/nginx/conf.d/default.conf
    env_file:
      - ../.env

  procharity_bot_local:
    build:
      context: ../../ProCharity_back_2.0
      dockerfile: Dockerfile
    container_name: procharity_bot_local
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    env_file:
      - ../.env
